swagger: "2.0"
info:
  title: Guideme Services
  description: HTTP service for managing the organizations and tutorials.
  version: ""
host: localhost:8000
consumes:
- application/json
- application/xml
- application/gob
produces:
- application/json
- application/xml
- application/gob
paths:
  /organization:
    get:
      tags:
      - organization
      summary: list organization
      description: List all stored Organizations
      operationId: organization#list
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/OrganizationStoredOrganizationResponseTinyCollection'
      schemes:
      - http
    post:
      tags:
      - organization
      summary: add organization
      description: Add new bottle and return its ID.
      operationId: organization#add
      parameters:
      - name: AddRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/OrganizationAddRequestBody'
          required:
          - name
          - url
      responses:
        "201":
          description: Created response.
          schema:
            type: string
      schemes:
      - http
  /organization/{id}:
    get:
      tags:
      - organization
      summary: show organization
      description: Show Organization by ID
      operationId: organization#show
      parameters:
      - name: view
        in: query
        description: View to render
        required: false
        type: string
        enum:
        - default
        - tiny
      - name: id
        in: path
        description: ID of the Organization to show
        required: true
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/OrganizationShowResponseBody'
        "404":
          description: Not Found response.
          schema:
            $ref: '#/definitions/OrganizationShowNotFoundResponseBody'
            required:
            - message
            - id
      schemes:
      - http
    delete:
      tags:
      - organization
      summary: remove organization
      description: Remove Organization from storage
      operationId: organization#remove
      parameters:
      - name: id
        in: path
        description: ID of Organization to remove
        required: true
        type: string
      responses:
        "204":
          description: No Content response.
      schemes:
      - http
  /organization/update:
    put:
      tags:
      - organization
      summary: update organization
      description: Update organization with the given IDs.
      operationId: organization#update
      parameters:
      - name: UpdateRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/OrganizationUpdateRequestBody'
          required:
          - id
          - name
          - url
      responses:
        "204":
          description: No Content response.
      schemes:
      - http
  /steps:
    post:
      tags:
      - step
      summary: add step
      description: Add new Steps to walkthrough and return ID.
      operationId: step#add
      parameters:
      - name: AddRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/StepAddRequestBody'
      responses:
        "201":
          description: Created response.
          schema:
            $ref: '#/definitions/StepAddResponseBody'
      schemes:
      - http
  /steps/{id}:
    get:
      tags:
      - step
      summary: list step
      description: List all stored Steps for a given walkthrough
      operationId: step#list
      parameters:
      - name: id
        in: path
        description: 'ID of Walkthrough to search for steps '
        required: true
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/StepListResponseBody'
      schemes:
      - http
    delete:
      tags:
      - step
      summary: remove step
      description: Remove Steps from storage
      operationId: step#remove
      parameters:
      - name: id
        in: path
        description: ID of Steps to remove
        required: true
        type: string
      responses:
        "204":
          description: No Content response.
      schemes:
      - http
  /steps/update:
    put:
      tags:
      - step
      summary: update step
      description: Update Steps with the given IDs.
      operationId: step#update
      parameters:
      - name: UpdateRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/StepUpdateRequestBody'
          required:
          - id
          - wtId
          - steps
      responses:
        "204":
          description: No Content response.
      schemes:
      - http
  /swagger/swagger.json:
    get:
      tags:
      - swagger
      summary: Download gen/http/openapi.json
      description: JSON document containing the API swagger definition
      operationId: swagger#/swagger/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
  /walkthrough:
    post:
      tags:
      - walkthrough
      summary: add walkthrough
      description: Add new Tutorial and return its ID.
      operationId: walkthrough#add
      parameters:
      - name: AddRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/WalkthroughAddRequestBody'
          required:
          - name
          - baseURL
          - organization
      responses:
        "201":
          description: Created response.
          schema:
            $ref: '#/definitions/WalkthroughAddResponseBody'
      schemes:
      - http
  /walkthrough/{id}:
    get:
      tags:
      - walkthrough
      summary: list walkthrough
      description: List all stored walkthrough for a given organization
      operationId: walkthrough#list
      parameters:
      - name: id
        in: path
        description: 'ID of Organization to search for '
        required: true
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/WalkthroughStoredWalkthroughResponseTinyCollection'
      schemes:
      - http
    delete:
      tags:
      - walkthrough
      summary: remove walkthrough
      description: Remove Walkthrough from storage
      operationId: walkthrough#remove
      parameters:
      - name: id
        in: path
        description: ID of Walkthrough to remove
        required: true
        type: string
      responses:
        "204":
          description: No Content response.
      schemes:
      - http
  /walkthrough/publish/{id}:
    put:
      tags:
      - walkthrough
      summary: publish walkthrough
      description: Publishes Walkthrough with the given IDs.
      operationId: walkthrough#publish
      parameters:
      - name: id
        in: path
        description: ID of Walkthrough to be published
        required: true
        type: string
      responses:
        "204":
          description: No Content response.
      schemes:
      - http
  /walkthrough/rename:
    put:
      tags:
      - walkthrough
      summary: rename walkthrough
      description: Rename Walkthrough with the given IDs.
      operationId: walkthrough#rename
      parameters:
      - name: RenameRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/WalkthroughRenameRequestBody'
          required:
          - id
          - name
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/WalkthroughRenameResponseBodyTiny'
      schemes:
      - http
  /walkthrough/show/{id}:
    get:
      tags:
      - walkthrough
      summary: show walkthrough
      description: Show Walkthrough by ID
      operationId: walkthrough#show
      parameters:
      - name: view
        in: query
        description: View to render
        required: false
        type: string
        enum:
        - default
        - tiny
      - name: id
        in: path
        description: ID of the Walkthrough to show
        required: true
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/WalkthroughShowResponseBody'
        "404":
          description: Not Found response.
          schema:
            $ref: '#/definitions/WalkthroughShowNotFoundResponseBody'
            required:
            - message
            - id
      schemes:
      - http
  /walkthrough/update:
    put:
      tags:
      - walkthrough
      summary: update walkthrough
      description: Update Walkthrough with the given IDs.
      operationId: walkthrough#update
      parameters:
      - name: UpdateRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/WalkthroughUpdateRequestBody'
          required:
          - id
          - name
          - baseURL
          - organization
      responses:
        "204":
          description: No Content response.
      schemes:
      - http
definitions:
  OrganizationAddRequestBody:
    title: OrganizationAddRequestBody
    type: object
    properties:
      name:
        type: string
        description: Name of Organization
        example: Creating a new request in netflix!
        maxLength: 200
      url:
        type: string
        description: Company website URL
        example: http://www.google.com/
        pattern: (?i)^(https?|ftp)://[^\s/$.?#].[^\s]*$
    example:
      name: Creating a new request in netflix!
      url: http://www.google.com/
    required:
    - name
    - url
  OrganizationShowNotFoundResponseBody:
    title: OrganizationShowNotFoundResponseBody
    type: object
    properties:
      id:
        type: string
        description: ID of missing element
        example: Vitae et.
      message:
        type: string
        description: Message of error
        example: Element 1 not found
    description: Organization not found
    example:
      id: Libero animi numquam aliquid ea.
      message: Element 1 not found
    required:
    - message
    - id
  OrganizationShowResponseBody:
    title: 'Mediatype identifier: application/vnd.goa.guide.me.stored-organization;
      view=default'
    type: object
    properties:
      id:
        type: string
        description: ID is the unique id of the Organization.
        example: 123abc
      name:
        type: string
        description: Name of Organization
        example: Creating a new request in netflix!
        maxLength: 200
      url:
        type: string
        description: Company website URL
        example: http://www.google.com/
        pattern: (?i)^(https?|ftp)://[^\s/$.?#].[^\s]*$
    description: ShowResponseBody result type (default view)
    example:
      id: 123abc
      name: Creating a new request in netflix!
      url: http://www.google.com/
    required:
    - id
    - name
    - url
  OrganizationStoredOrganizationResponseTinyCollection:
    title: 'Mediatype identifier: application/vnd.goa.guide.me.stored-organization;
      type=collection; view=tiny'
    type: array
    items:
      $ref: '#/definitions/StoredOrganizationResponseTiny'
    description: OrganizationStoredOrganizationResponseTinyCollection is the result
      type for an array of StoredOrganizationResponseTiny (default view)
    example:
    - id: 123abc
      name: Creating a new request in netflix!
      url: http://www.google.com/
    - id: 123abc
      name: Creating a new request in netflix!
      url: http://www.google.com/
    - id: 123abc
      name: Creating a new request in netflix!
      url: http://www.google.com/
  OrganizationUpdateRequestBody:
    title: OrganizationUpdateRequestBody
    type: object
    properties:
      id:
        type: string
        description: ID is the unique id of the Organization.
        example: 123abc
      name:
        type: string
        description: Name of Organization
        example: Creating a new request in netflix!
        maxLength: 200
      url:
        type: string
        description: Company website URL
        example: http://www.google.com/
        pattern: (?i)^(https?|ftp)://[^\s/$.?#].[^\s]*$
    example:
      id: 123abc
      name: Creating a new request in netflix!
      url: http://www.google.com/
    required:
    - id
    - name
    - url
  StepAddRequestBody:
    title: StepAddRequestBody
    type: object
    properties:
      step:
        $ref: '#/definitions/StepRequestBody'
      wtId:
        type: string
        description: Id of the walkthrough to have a step added to
        example: Deserunt alias reiciendis et possimus rerum.
    example:
      step:
        action: next
        content: This dropdown contains values from the list of status, for our scenario
          we want to chose 'active'
        placement: right
        stepNumber: 1691423350
        target: Et maiores cum expedita voluptas.
        title: Click here to make it work!
      wtId: Voluptates quae in quis quisquam error.
  StepAddResponseBody:
    title: 'Mediatype identifier: application/vnd.goa.guide.me.result-steps; view=default'
    type: object
    properties:
      step:
        $ref: '#/definitions/StoredStepResponseBody'
      wtId:
        type: string
        description: Id of the walkthrough to have a step added to
        example: Repellat nemo eius.
    description: AddResponseBody result type (default view)
    example:
      step:
        action: end
        content: This dropdown contains values from the list of status, for our scenario
          we want to chose 'active'
        id: Molestiae laudantium aliquam non nostrum veniam et.
        placement: left
        stepNumber: 1122831005
        target: Libero consequatur reiciendis velit omnis distinctio excepturi.
        title: Click here to make it work!
      wtId: Dolor officiis rerum.
    required:
    - wtId
    - step
  StepListResponseBody:
    title: 'Mediatype identifier: application/vnd.goa.guide.me.stored-steps; view=default'
    type: object
    properties:
      id:
        type: string
        description: ID is the unique id of the Step.
        example: 123abc
      steps:
        type: array
        items:
          $ref: '#/definitions/StepResponseBody'
        description: List of steps for a given walkthrough.
        example:
        - action: end
          content: This dropdown contains values from the list of status, for our
            scenario we want to chose 'active'
          placement: right
          stepNumber: 2085161257
          target: Quaerat aut.
          title: Click here to make it work!
        - action: end
          content: This dropdown contains values from the list of status, for our
            scenario we want to chose 'active'
          placement: right
          stepNumber: 2085161257
          target: Quaerat aut.
          title: Click here to make it work!
      wtId:
        type: string
        description: The id of the Walkthrough those steps belong to.
        example: abc234235
    description: ListResponseBody result type (default view)
    example:
      id: 123abc
      steps:
      - action: end
        content: This dropdown contains values from the list of status, for our scenario
          we want to chose 'active'
        placement: right
        stepNumber: 2085161257
        target: Quaerat aut.
        title: Click here to make it work!
      - action: end
        content: This dropdown contains values from the list of status, for our scenario
          we want to chose 'active'
        placement: right
        stepNumber: 2085161257
        target: Quaerat aut.
        title: Click here to make it work!
      - action: end
        content: This dropdown contains values from the list of status, for our scenario
          we want to chose 'active'
        placement: right
        stepNumber: 2085161257
        target: Quaerat aut.
        title: Click here to make it work!
      - action: end
        content: This dropdown contains values from the list of status, for our scenario
          we want to chose 'active'
        placement: right
        stepNumber: 2085161257
        target: Quaerat aut.
        title: Click here to make it work!
      wtId: abc234235
    required:
    - id
    - wtId
    - steps
  StepRequestBody:
    title: StepRequestBody
    type: object
    properties:
      action:
        type: string
        description: What action should trigger the next step
        default: next
        example: next
        enum:
        - click
        - next
        - end
      content:
        type: string
        description: The content of the message to be displayed
        example: This dropdown contains values from the list of status, for our scenario
          we want to chose 'active'
      placement:
        type: string
        description: Where the popup will be anchored, left, right, top or buttom.
        default: right
        example: left
        enum:
        - left
        - right
        - top
        - buttom
      stepNumber:
        type: integer
        description: The number in the sequence that the step belongs to
        example: 1739541946
        format: int32
      target:
        type: string
        description: Unique html if for the target
        example: Magnam quidem iusto aut minima.
      title:
        type: string
        description: Title for the given step
        example: Click here to make it work!
    description: Step describes the basic details of your tutorials.
    example:
      action: end
      content: This dropdown contains values from the list of status, for our scenario
        we want to chose 'active'
      placement: right
      stepNumber: 25290715
      target: Perspiciatis et nam unde et sint.
      title: Click here to make it work!
    required:
    - title
    - target
    - stepNumber
    - placement
    - content
    - action
  StepResponseBody:
    title: StepResponseBody
    type: object
    properties:
      action:
        type: string
        description: What action should trigger the next step
        default: next
        example: click
        enum:
        - click
        - next
        - end
      content:
        type: string
        description: The content of the message to be displayed
        example: This dropdown contains values from the list of status, for our scenario
          we want to chose 'active'
      placement:
        type: string
        description: Where the popup will be anchored, left, right, top or buttom.
        default: right
        example: buttom
        enum:
        - left
        - right
        - top
        - buttom
      stepNumber:
        type: integer
        description: The number in the sequence that the step belongs to
        example: 887123255
        format: int32
      target:
        type: string
        description: Unique html if for the target
        example: Et explicabo.
      title:
        type: string
        description: Title for the given step
        example: Click here to make it work!
    description: Step describes the basic details of your tutorials.
    example:
      action: click
      content: This dropdown contains values from the list of status, for our scenario
        we want to chose 'active'
      placement: right
      stepNumber: 1825887162
      target: Placeat exercitationem et unde optio magnam.
      title: Click here to make it work!
    required:
    - title
    - target
    - stepNumber
    - placement
    - content
    - action
  StepUpdateRequestBody:
    title: StepUpdateRequestBody
    type: object
    properties:
      id:
        type: string
        description: ID is the unique id of the Step.
        example: 123abc
      steps:
        type: array
        items:
          $ref: '#/definitions/StepRequestBody'
        description: List of steps for a given walkthrough.
        example:
        - action: next
          content: This dropdown contains values from the list of status, for our
            scenario we want to chose 'active'
          placement: right
          stepNumber: 1691423350
          target: Et maiores cum expedita voluptas.
          title: Click here to make it work!
        - action: next
          content: This dropdown contains values from the list of status, for our
            scenario we want to chose 'active'
          placement: right
          stepNumber: 1691423350
          target: Et maiores cum expedita voluptas.
          title: Click here to make it work!
      wtId:
        type: string
        description: The id of the Walkthrough those steps belong to.
        example: abc234235
    example:
      id: 123abc
      steps:
      - action: next
        content: This dropdown contains values from the list of status, for our scenario
          we want to chose 'active'
        placement: right
        stepNumber: 1691423350
        target: Et maiores cum expedita voluptas.
        title: Click here to make it work!
      - action: next
        content: This dropdown contains values from the list of status, for our scenario
          we want to chose 'active'
        placement: right
        stepNumber: 1691423350
        target: Et maiores cum expedita voluptas.
        title: Click here to make it work!
      - action: next
        content: This dropdown contains values from the list of status, for our scenario
          we want to chose 'active'
        placement: right
        stepNumber: 1691423350
        target: Et maiores cum expedita voluptas.
        title: Click here to make it work!
      - action: next
        content: This dropdown contains values from the list of status, for our scenario
          we want to chose 'active'
        placement: right
        stepNumber: 1691423350
        target: Et maiores cum expedita voluptas.
        title: Click here to make it work!
      wtId: abc234235
    required:
    - id
    - wtId
    - steps
  StoredOrganizationResponseTiny:
    title: 'Mediatype identifier: application/vnd.goa.guide.me.stored-organization;
      view=default'
    type: object
    properties:
      id:
        type: string
        description: ID is the unique id of the Organization.
        example: 123abc
      name:
        type: string
        description: Name of Organization
        example: Creating a new request in netflix!
        maxLength: 200
    description: A StoredOrganization describes an Organization retrieved by the Organization
      service. (tiny view) (default view)
    example:
      id: 123abc
      name: Creating a new request in netflix!
    required:
    - id
    - name
  StoredStepResponseBody:
    title: 'Mediatype identifier: application/vnd.goa.guide.me.stored-step; view=default'
    type: object
    properties:
      action:
        type: string
        description: What action should trigger the next step
        default: next
        example: end
        enum:
        - click
        - next
        - end
      content:
        type: string
        description: The content of the message to be displayed
        example: This dropdown contains values from the list of status, for our scenario
          we want to chose 'active'
      id:
        type: string
        description: Unique id to this step
        example: Saepe tenetur ratione sunt.
      placement:
        type: string
        description: Where the popup will be anchored, left, right, top or buttom.
        default: right
        example: left
        enum:
        - left
        - right
        - top
        - buttom
      stepNumber:
        type: integer
        description: The number in the sequence that the step belongs to
        example: 151369245
        format: int32
      target:
        type: string
        description: Unique html if for the target
        example: Quia exercitationem repellat.
      title:
        type: string
        description: Title for the given step
        example: Click here to make it work!
    description: A StoredStep describes a step returned from the database.
    example:
      action: next
      content: This dropdown contains values from the list of status, for our scenario
        we want to chose 'active'
      id: A aperiam molestiae repudiandae excepturi omnis.
      placement: right
      stepNumber: 940944427
      target: Tenetur et quos et.
      title: Click here to make it work!
    required:
    - id
    - title
    - target
    - stepNumber
    - content
    - placement
    - action
  StoredWalkthroughResponseTiny:
    title: 'Mediatype identifier: application/vnd.goa.guide.me.stored-walkthrough;
      view=default'
    type: object
    properties:
      baseURL:
        type: string
        description: base url for your tutorial to start from
        example: http://www.google.com/
        pattern: (?i)^(https?|ftp)://[^\s/$.?#].[^\s]*$
      id:
        type: string
        description: ID is the unique id of the Walkthrough.
        example: 123abc
      name:
        type: string
        description: Name of the Tutorial
        example: How to create a new process using the exception condition.
        maxLength: 100
      organization:
        type: string
        description: ID of the organization this tutorial belongs to
        example: Et quasi tenetur dolores rerum.
    description: A StoredWalkthrough describes a Walkthrough retrieved by the Walkthrough
      service. (tiny view) (default view)
    example:
      baseURL: http://www.google.com/
      id: 123abc
      name: How to create a new process using the exception condition.
      organization: Rem laboriosam nihil sint fugiat consequatur quibusdam.
    required:
    - id
    - name
    - baseURL
    - organization
  WalkthroughAddRequestBody:
    title: WalkthroughAddRequestBody
    type: object
    properties:
      baseURL:
        type: string
        description: base url for your tutorial to start from
        example: http://www.google.com/
        pattern: (?i)^(https?|ftp)://[^\s/$.?#].[^\s]*$
      name:
        type: string
        description: Name of the Tutorial
        example: How to create a new process using the exception condition.
        maxLength: 100
      organization:
        type: string
        description: ID of the organization this tutorial belongs to
        example: Quisquam dignissimos porro assumenda dicta.
      publishedURL:
        type: string
        description: Code to be added into an existing page to make it visible locally
        example: Aperiam similique dolor et assumenda voluptate.
      status:
        type: string
        description: 'Status of the walkthrough [draft|published] '
        default: draft
        example: draft | published
        enum:
        - draft
        - completed
        - removed
    example:
      baseURL: http://www.google.com/
      name: How to create a new process using the exception condition.
      organization: Laboriosam soluta in aliquid et.
      publishedURL: Cupiditate ducimus non porro.
      status: draft | published
    required:
    - name
    - baseURL
    - organization
  WalkthroughAddResponseBody:
    title: 'Mediatype identifier: application/vnd.goa.guide.me.stored-walkthrough;
      view=default'
    type: object
    properties:
      baseURL:
        type: string
        description: base url for your tutorial to start from
        example: http://www.google.com/
        pattern: (?i)^(https?|ftp)://[^\s/$.?#].[^\s]*$
      id:
        type: string
        description: ID is the unique id of the Walkthrough.
        example: 123abc
      name:
        type: string
        description: Name of the Tutorial
        example: How to create a new process using the exception condition.
        maxLength: 100
      organization:
        type: string
        description: ID of the organization this tutorial belongs to
        example: Sit velit assumenda.
      publishedURL:
        type: string
        description: Code to be added into an existing page to make it visible locally
        example: Eos sapiente quas rerum.
      status:
        type: string
        description: 'Status of the walkthrough [draft|published] '
        default: draft
        example: draft | published
        enum:
        - draft
        - completed
        - removed
    description: AddResponseBody result type (default view)
    example:
      baseURL: http://www.google.com/
      id: 123abc
      name: How to create a new process using the exception condition.
      organization: Nesciunt debitis corrupti corporis.
      publishedURL: Sit et.
      status: draft | published
    required:
    - id
    - name
    - baseURL
    - organization
  WalkthroughRenameRequestBody:
    title: WalkthroughRenameRequestBody
    type: object
    properties:
      id:
        type: string
        description: ID of Walkthrough to be renamed
        example: Qui rem sed enim.
      name:
        type: string
        description: New Name to the walkthrough
        example: Consequatur quisquam vitae dolorem architecto.
    example:
      id: Natus aut molestias.
      name: Placeat sed.
    required:
    - id
    - name
  WalkthroughRenameResponseBodyTiny:
    title: 'Mediatype identifier: application/vnd.goa.guide.me.stored-walkthrough;
      view=tiny'
    type: object
    properties:
      baseURL:
        type: string
        description: base url for your tutorial to start from
        example: http://www.google.com/
        pattern: (?i)^(https?|ftp)://[^\s/$.?#].[^\s]*$
      id:
        type: string
        description: ID is the unique id of the Walkthrough.
        example: 123abc
      name:
        type: string
        description: Name of the Tutorial
        example: How to create a new process using the exception condition.
        maxLength: 100
      organization:
        type: string
        description: ID of the organization this tutorial belongs to
        example: Hic maxime et laborum atque ea voluptate.
    description: RenameResponseBody result type (tiny view) (default view)
    example:
      baseURL: http://www.google.com/
      id: 123abc
      name: How to create a new process using the exception condition.
      organization: Quo illo esse itaque quae.
    required:
    - id
    - name
    - baseURL
    - organization
  WalkthroughShowNotFoundResponseBody:
    title: WalkthroughShowNotFoundResponseBody
    type: object
    properties:
      id:
        type: string
        description: ID of missing element
        example: Reprehenderit iste voluptas recusandae.
      message:
        type: string
        description: Message of error
        example: Element 1 not found
    description: Walkthrough not found
    example:
      id: Fuga ab amet eum delectus non pariatur.
      message: Element 1 not found
    required:
    - message
    - id
  WalkthroughShowResponseBody:
    title: 'Mediatype identifier: application/vnd.goa.guide.me.stored-walkthrough;
      view=default'
    type: object
    properties:
      baseURL:
        type: string
        description: base url for your tutorial to start from
        example: http://www.google.com/
        pattern: (?i)^(https?|ftp)://[^\s/$.?#].[^\s]*$
      id:
        type: string
        description: ID is the unique id of the Walkthrough.
        example: 123abc
      name:
        type: string
        description: Name of the Tutorial
        example: How to create a new process using the exception condition.
        maxLength: 100
      organization:
        type: string
        description: ID of the organization this tutorial belongs to
        example: Explicabo dolorem.
      publishedURL:
        type: string
        description: Code to be added into an existing page to make it visible locally
        example: Repudiandae autem officiis aperiam amet iusto.
      status:
        type: string
        description: 'Status of the walkthrough [draft|published] '
        default: draft
        example: draft | published
        enum:
        - draft
        - completed
        - removed
    description: ShowResponseBody result type (default view)
    example:
      baseURL: http://www.google.com/
      id: 123abc
      name: How to create a new process using the exception condition.
      organization: Impedit sit.
      publishedURL: Aut dolore quo veritatis.
      status: draft | published
    required:
    - id
    - name
    - baseURL
    - organization
  WalkthroughStoredWalkthroughResponseTinyCollection:
    title: 'Mediatype identifier: application/vnd.goa.guide.me.stored-walkthrough;
      type=collection; view=tiny'
    type: array
    items:
      $ref: '#/definitions/StoredWalkthroughResponseTiny'
    description: WalkthroughStoredWalkthroughResponseTinyCollection is the result
      type for an array of StoredWalkthroughResponseTiny (default view)
    example:
    - baseURL: http://www.google.com/
      id: 123abc
      name: How to create a new process using the exception condition.
      organization: Nihil ut aperiam eum debitis.
      publishedURL: Dolores nisi cumque et voluptas consequatur reiciendis.
      status: draft | published
    - baseURL: http://www.google.com/
      id: 123abc
      name: How to create a new process using the exception condition.
      organization: Nihil ut aperiam eum debitis.
      publishedURL: Dolores nisi cumque et voluptas consequatur reiciendis.
      status: draft | published
  WalkthroughUpdateRequestBody:
    title: WalkthroughUpdateRequestBody
    type: object
    properties:
      baseURL:
        type: string
        description: base url for your tutorial to start from
        example: http://www.google.com/
        pattern: (?i)^(https?|ftp)://[^\s/$.?#].[^\s]*$
      id:
        type: string
        description: ID is the unique id of the Walkthrough.
        example: 123abc
      name:
        type: string
        description: Name of the Tutorial
        example: How to create a new process using the exception condition.
        maxLength: 100
      organization:
        type: string
        description: ID of the organization this tutorial belongs to
        example: Voluptates architecto nisi.
      publishedURL:
        type: string
        description: Code to be added into an existing page to make it visible locally
        example: Aut ut ipsa velit recusandae dolores.
      status:
        type: string
        description: 'Status of the walkthrough [draft|published] '
        default: draft
        example: draft | published
        enum:
        - draft
        - completed
        - removed
    example:
      baseURL: http://www.google.com/
      id: 123abc
      name: How to create a new process using the exception condition.
      organization: Minima dicta consequuntur sunt quo porro.
      publishedURL: Molestias ullam.
      status: draft | published
    required:
    - id
    - name
    - baseURL
    - organization
