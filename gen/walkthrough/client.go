// Code generated by goa v3.1.1, DO NOT EDIT.
//
// walkthrough client
//
// Command:
// $ goa gen guide.me/design

package walkthrough

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "walkthrough" service client.
type Client struct {
	ListEndpoint    goa.Endpoint
	ShowEndpoint    goa.Endpoint
	AddEndpoint     goa.Endpoint
	RemoveEndpoint  goa.Endpoint
	UpdateEndpoint  goa.Endpoint
	RenameEndpoint  goa.Endpoint
	PublishEndpoint goa.Endpoint
}

// NewClient initializes a "walkthrough" service client given the endpoints.
func NewClient(list, show, add, remove, update, rename, publish goa.Endpoint) *Client {
	return &Client{
		ListEndpoint:    list,
		ShowEndpoint:    show,
		AddEndpoint:     add,
		RemoveEndpoint:  remove,
		UpdateEndpoint:  update,
		RenameEndpoint:  rename,
		PublishEndpoint: publish,
	}
}

// List calls the "list" endpoint of the "walkthrough" service.
func (c *Client) List(ctx context.Context, p *ListPayload) (res StoredWalkthroughCollection, err error) {
	var ires interface{}
	ires, err = c.ListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(StoredWalkthroughCollection), nil
}

// Show calls the "show" endpoint of the "walkthrough" service.
// Show may return the following errors:
//	- "not_found" (type *ElementNotFound): Walkthrough not found
//	- error: internal error
func (c *Client) Show(ctx context.Context, p *ShowPayload) (res *StoredWalkthrough, err error) {
	var ires interface{}
	ires, err = c.ShowEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*StoredWalkthrough), nil
}

// Add calls the "add" endpoint of the "walkthrough" service.
func (c *Client) Add(ctx context.Context, p *Walkthrough) (res *StoredWalkthrough, err error) {
	var ires interface{}
	ires, err = c.AddEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*StoredWalkthrough), nil
}

// Remove calls the "remove" endpoint of the "walkthrough" service.
// Remove may return the following errors:
//	- "not_found" (type *ElementNotFound): Walkthrough not found
//	- error: internal error
func (c *Client) Remove(ctx context.Context, p *RemovePayload) (err error) {
	_, err = c.RemoveEndpoint(ctx, p)
	return
}

// Update calls the "update" endpoint of the "walkthrough" service.
func (c *Client) Update(ctx context.Context, p *StoredWalkthrough) (err error) {
	_, err = c.UpdateEndpoint(ctx, p)
	return
}

// Rename calls the "rename" endpoint of the "walkthrough" service.
func (c *Client) Rename(ctx context.Context, p *RenamePayload) (res *StoredWalkthrough, err error) {
	var ires interface{}
	ires, err = c.RenameEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*StoredWalkthrough), nil
}

// Publish calls the "publish" endpoint of the "walkthrough" service.
func (c *Client) Publish(ctx context.Context, p *PublishPayload) (err error) {
	_, err = c.PublishEndpoint(ctx, p)
	return
}
